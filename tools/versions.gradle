def version = [:]
version.gradle = '3.3.0'
version.appcompat = '1.0.2'
version.constraintLayout = '1.1.3'
version.material = '1.0.0'
version.lifecycle = '2.0.0'
version.retrofit = '2.5.0'
version.okHttp = '3.12.1'
version.rx = '2.1.0'
version.timber = '4.7.1'
version.gson = '2.8.5'
version.junit = '4.12'
version.mockito = '1.10.19'
version.espresso = '3.1.0'
version.test_runner = '1.1.0'
version.glide = '4.8.0'

def configurations = [:]
configurations.compileSdkVersion = 28
configurations.targetSdkVersion = 28
configurations.minSdkVersion = 21

def classpath = [:]
classpath.gradle = "com.android.tools.build:gradle:$version.gradle"

def androidx = [:]
androidx.appcompat = "androidx.appcompat:appcompat:$version.appcompat"
androidx.constraintLayout = "androidx.constraintlayout:constraintlayout:$version.constraintLayout"
androidx.material = "com.google.android.material:material:$version.material"
androidx.lifecycle = "androidx.lifecycle:lifecycle-extensions:$version.lifecycle"

def retrofit = [:]
retrofit.retrofit = "com.squareup.retrofit2:retrofit:$version.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$version.retrofit"
retrofit.rx_adapter = "com.squareup.retrofit2:adapter-rxjava2:$version.retrofit"

def okHttp = [:]
okHttp.okHttp = "com.squareup.okhttp3:okhttp:$version.okHttp"
okHttp.loggingInterceptor = "com.squareup.okhttp3:logging-interceptor:$version.okHttp"

def others = [:]
others.rx = "io.reactivex.rxjava2:rxandroid:$version.rx"
others.timber = "com.jakewharton.timber:timber:$version.timber"
others.gson = "com.google.code.gson:gson:$version.gson"
others.glide = "com.github.bumptech.glide:glide:$version.glide"

def test = [
        [configuration: "testImplementation", dependency: "junit:junit:$version.junit"],
        [configuration: "testImplementation", dependency: "org.mockito:mockito-core:$version.mockito"],
        [configuration: "testImplementation", dependency: "androidx.arch.core:core-testing:$version.lifecycle"],
        [configuration: "androidTestImplementation", dependency: "androidx.test:runner:$version.test_runner"],
        [configuration: "androidTestImplementation", dependency: "androidx.test.espresso:espresso-core:$version.espresso"]
]

def implementation = [:]
implementation.androidx = androidx
implementation.retrofit = retrofit
implementation.okHttp = okHttp
implementation.others = others

def dependencies = [:]
dependencies.classpath = classpath
dependencies.implementation = implementation
dependencies.test = test

ext.deps = dependencies
ext.config = configurations